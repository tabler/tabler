{
  "name": "preview",
  "private": true,
  "scripts": {
    "build": "pnpm run clean && pnpm run css && pnpm run js && pnpm run html",
    "dev": "pnpm run clean && pnpm run watch",
    "watch": "pnpm run watch-html & pnpm run watch-css & pnpm run watch-js",
    "watch-html": "eleventy --serve --port=3000",
    "watch-js": "nodemon --watch js/ --ext js --exec 'pnpm run js'",
    "watch-css": "nodemon --watch scss/ --ext scss --exec 'pnpm run css'",
    "css": "pnpm run css-compile && pnpm run css-prefix && pnpm run css-minify",
    "css-compile": "sass scss/:dist/preview/css/ --no-source-map --load-path=node_modules",
    "css-prefix": "postcss --config build/postcss.config.mjs --replace 'dist/preview/css/*.css' '!dist/preview/css/*.rtl*.css' '!dist/preview/css/*.min.css'",
    "css-minify": "cleancss -O1 --format breakWith=lf --with-rebase --source-map --source-map-inline-sources --output dist/preview/css/ --batch --batch-suffix '.min' 'dist/preview/css/*.css' '!dist/preview/css/*.min.css' '!dist/preview/css/*rtl*.css'",
    "js": "pnpm run js-compile && pnpm run js-minify",
    "js-compile": "rollup --config build/rollup.config.mjs --sourcemap",
    "js-minify": "pnpm run js-minify-demo && pnpm run js-minify-theme",
    "js-minify-demo": "terser --compress passes=2 --mangle --comments '/^!/' --source-map 'content=dist/preview/js/demo.js.map,includeSources,url=demo.min.js.map' --output dist/preview/js/demo.min.js dist/preview/js/demo.js",
    "js-minify-theme": "terser --compress passes=2 --mangle --comments '/^!/' --source-map 'content=dist/preview/js/demo-theme.js.map,includeSources,url=demo-theme.min.js.map' --output dist/preview/js/demo-theme.min.js dist/preview/js/demo-theme.js", 
    "clean": "rm -rf dist demo",
    "html": "eleventy",
    "svg-optimize": "svgo -f svg/brand --pretty",
    "unused-files": "node build/unused-files.mjs",
    "download-images": "node build/download-images.mjs",
    "optimize-images": "for i in ./src/static/photos/*.jpg; do convert \"$i\" -quality 80% \"${i%.jpg}.jpg\"; done",
    "svg-icons": "node build/import-icons.mjs",
    "import-illustrations": "node build/import-illustrations.mjs",
    "import-icons": "git checkout dev && BRANCH_NAME=\"dev-tabler-icons-`pnpm info @tabler/icons version`\" && git branch $BRANCH_NAME && git checkout $BRANCH_NAME && ncu -u @tabler/icons && pnpm install && pnpm run svg-icons && git add . && git commit -am \"update icons to v`pnpm info @tabler/icons version`\" && git push origin $BRANCH_NAME && git checkout dev",
    "zip": "mkdir -p packages-zip && zip -r packages-zip/tabler-$(node -p \"require('./package.json').version\").zip demo/*"
  },
  "dependencies": {
    "@tabler/icons": "^3.29.0",
    "@melloware/coloris": "^0.19.1",
    "apexcharts": "^4.4.0",
    "@tabler/core": "workspace:*",
    "star-rating.js": "^4.3.1",
    "tinymce": "^7.6.0",
    "tom-select": "^2.4.1",
    "typed.js": "^2.1.0",
    "imask": "^7.6.1",
    "jsvectormap": "^1.6.0",
    "list.js": "^2.3.1",
    "litepicker": "^2.0.12",
    "nouislider": "^15.8.1",
    "plyr": "^3.7.8",
    "dropzone": "^6.0.0-beta.2",
    "flatpickr": "^4.6.13",
    "fslightbox": "^3.4.2",
    "choices.js": "^11.0.3",
    "countup.js": "^2.8.0",
    "autosize": "^6.0.1"
  },
  "devDependencies": {
    "request": "^2.88.2",
    "imageoptim-cli": "^3.1.9",
    "@11ty/eleventy": "^3.0.0",
    "@repo/banner": "workspace:*"
  }
}